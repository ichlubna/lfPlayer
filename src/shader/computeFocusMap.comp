#version 450
#include "computeHeader.glsl"

float colorDistance(vec3 a, vec3 b)
{
    return max(max(abs(a.r-b.r), abs(a.g-b.g)), abs(a.b-b.b)); //Chebyshev
}

void main()
{
    const ivec2 outCoords = ivec2(gl_GlobalInvocationID.x, gl_GlobalInvocationID.y);
    const vec2 uv = vec2(outCoords)/vec2(WIDTH,HEIGHT);
    vec4 color = vec4(0.0f);
    for(int i=0; i<4; i++) 
        color += uniforms.lfWeights[i]*texture(sampler2D(textures[2+i], textSampler), uv);
    color.w = 1.0f;
    imageStore(images[0], outCoords, color);
}
